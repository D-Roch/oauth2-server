production {
  scalatra {
    auth {
      providers {
        facebook {
          clientId = "151417151653153"
          clientSecret = "c20cb98a1555e97122470dbaf1353650"
          scope = ["email"]
        }
        twitter {
          clientId = "zmgb03FFom1bLbklYBJJQ"
          clientSecret = "GVyY8dYo446W6Zyn9B8NTXQ2rPysFVQtm89fWhtCQM"
          scope = []
        }
      }
    }
    oauth2 {
      mongo {
        uri = ${?MONGOLAB_URI}
      }
      web {
        host = "0.0.0.0"
        port = ${?PORT}
        domain = "scalatra-oauth-sample.herokuapp.com"
        appUrl = "http://"${production.scalatra.oauth2.web.domain}
        guiUrl = ${production.scalatra.oauth2.web.appUrl}
      }
    }
    smtp {
      host = "smtp.sendgrid.net"
      port = 587
      from {
        name = "BackChat.IO"
        email = "no-reply@backchat.io"
      }
      user = ${?SENDGRID_USERNAME}
      password = ${?SENDGRID_PASSWORD}
      sslRequired = true
    }
  }
}

test {
  scalatra {
    oauth2 {
      mongo {
        uri = "mongodb://test:test@127.0.0.1:27017/oauth_server_test"
      }
      web {
        domain = "test.localhost"
        port = 8080
        appUrl = "http://"${test.scalatra.oauth2.web.domain}":"${test.scalatra.oauth2.web.port}
      }
    }
  }
}

scalatra {
  auth {
    providers {
      facebook {
        clientId = "289787671067973"
        clientSecret = "96b62e67d27cecafd1ccbcce7a17b11c"
        scope = ["email"]
      }
      twitter {
        clientId = "GW43qgo6Tu5lxa090MbYNA"
        clientSecret = "0xs1Ztzih7tDlHSIh5t6YumI1fDkRd963pv2oM5Fg"
        scope = []
      }
    }
    sessionTimeout = 20m
  }
  oauth2 {
    mongo {
      uri = "mongodb://test:test@127.0.0.1:27017/backchat_oauth2"
    }

    web {
      public = "src/main/webapp"
      host = "0.0.0.0"
      domain = "test.flanders.co.nz"
      port = 8080
      appUrl = "http://"${scalatra.oauth2.web.domain}":"${scalatra.oauth2.web.port}
      guiUrl = ${scalatra.oauth2.web.appUrl}
      sslRequired = false
      authorizationType = code_and_token
      realm = "Backchat"
      useParams = false

      cors {
        allowedOrigins    = ["*"]
        allowedMethods = ["GET", "POST", "PUT", "DELETE", "HEAD", "OPTIONS", "PATCH"]
        allowedHeaders = [
          "Cookie",
          "Host",
          "X-Forwarded-For",
          "Accept-Charset",
          "If-Modified-Since",
          "Accept-Language",
          "X-Forwarded-Port",
          "Connection",
          "X-Forwarded-Proto",
          "User-Agent",
          "Referer",
          "Accept-Encoding",
          "X-Requested-With",
          "Authorization",
          "Accept",
          "Content-Type"
        ]
        allowCredentials = true
        preflightMaxAge = 1800

      }
    }

    permissions = [
      { code = "auth-server-admin", name = "OAuth2 Server Admin", description = "Allowed to administer this OAuth2 Server" }
    ]
  }
  smtp {
    host = "uit.telenet.be"
    port = 25
    from {
      name = "BackChat.IO"
      email = "no-reply@backchat.io"
    }
    user = ""
    password = ""
    sslRequired = false
  }
}